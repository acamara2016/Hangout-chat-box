{"version":3,"sources":["services/firebase.js","components/SignIn.js","components/Avatar.js","components/ChatMessage.js","ChatRoom.js","components/Geolocation.js","components/gps.js","components/synchronized.js","pages/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","style","height","class","marginTop","onClick","provider","GoogleAuthProvider","signInWithPopup","role","StyledBadge","withStyles","theme","badge","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","borderRadius","animation","border","content","transform","opacity","Badge","useStyles","root","Avatar","makeStyles","display","margin","spacing","BadgeAvatars","props","classes","className","overlap","anchorOrigin","vertical","horizontal","variant","alt","title","src","img","ChatMessage","message","text","chat_id","uid","photoURL","contentJustification","createdAt","currentUser","messageColor","messageSize","imageOrNot","displayName","ChatRoom","dummy","useRef","messagesRef","nextId","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","add","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","id","ref","paddingLeft","bottom","onSubmit","rows","value","onChange","target","placeholder","type","disabled","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","console","log","latitude","longitude","accuracy","errors","err","warn","code","Component","React","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","flexGrow","Dashboard","useTheme","users","setUser","open","setOpen","useEffect","database","set","username","photo","state","chats","child","get","then","snapshot","exists","val","push","catch","error","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","update","signOut","App","useAuthState","user","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAgBOA,IAASC,KAAKC,QACjBF,IAASG,cAVG,CACZC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKZ,IAAMC,EAAOX,IAASW,OAChBC,EAAYZ,IAASY,Y,OCdnB,SAASC,IAOtB,OACI,qBAAKC,MAAO,CAACC,OAAO,SAAUC,MAAM,YAApC,SACE,qBAAKA,MAAM,gCAAX,SACE,qBAAKA,MAAM,cAAX,SACE,oBAAGF,MAAO,CAACG,UAAU,SAAUD,MAAM,kBAAkBE,QATxC,WACvB,IAAMC,EAAW,IAAInB,IAASW,KAAKS,mBACnCT,EAAKU,gBAAgBF,IAOqEG,KAAK,SAAvF,UAAgG,mBAAGN,MAAM,kBAAzG,gC,sECZNO,EAAcC,aAAW,SAACC,GAAD,MAAY,CACzCC,MAAO,CACLC,gBAAiB,UACjBC,MAAO,UACPC,UAAU,aAAD,OAAeJ,EAAMK,QAAQC,WAAWC,OACjD,WAAY,CACVC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPrB,OAAQ,OACRsB,aAAc,MACdC,UAAW,oCACXC,OAAQ,yBACRC,QAAS,OAGb,oBAAqB,CACnB,KAAM,CACJC,UAAW,YACXC,QAAS,GAEX,OAAQ,CACND,UAAW,aACXC,QAAS,OAxBKlB,CA2BhBmB,KAUEC,GARcpB,aAAW,SAACC,GAAD,MAAY,CACzCoB,KAAM,CACJT,MAAO,GACPrB,OAAQ,GACRwB,OAAO,aAAD,OAAed,EAAMK,QAAQC,WAAWC,WAJ9BR,CAMhBsB,KAEcC,aAAW,SAACtB,GAAD,MAAY,CACvCoB,KAAM,CACJG,QAAS,OACT,QAAS,CACPC,OAAQxB,EAAMyB,QAAQ,UAKb,SAASC,EAAaC,GACnC,IAAMC,EAAUT,IAEhB,OACE,qBAAKU,UAAWD,EAAQR,KAAxB,SACE,cAACtB,EAAD,CACEgC,QAAQ,SACRC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,QAAQ,MANV,SAQE,cAACb,EAAA,EAAD,CAAQc,IAAKR,EAAMS,MAAOC,IAAKV,EAAMW,UC5D9B,SAASC,EAAYZ,GAChC,MAAoDA,EAAMa,QAAzCC,GAAjB,EAAQC,QAAR,EAAiBD,MAAME,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,SAEtBC,GAFN,EAAsCC,UAETH,IAAQzD,EAAK6D,YAAYJ,IAAM,sBAAwB,yBAC9EK,EAAeL,IAAQzD,EAAK6D,YAAYJ,IAAM,gBAAkB,kBAChEM,EAAcN,IAAQzD,EAAK6D,YAAYJ,IAAM,GAAK,cAClDO,EAAaP,IAAQzD,EAAK6D,YAAYJ,IAAM,GAAK,cAACjB,EAAD,CAAcU,MAAOlD,EAAK6D,YAAYI,YAAab,IAAKM,GAAY,0DAC3H,OAAQ,qCACJ,qBAAKf,UAAU,cAAf,SAA6B,4BACrB,sBAAKxC,MAAO,CAACsB,MAAMsC,GAAc1D,MAAK,iBAAYsD,GAAlD,UACGK,EACD,mBAAG3D,MAAK,uCAAkCyD,GAA1C,SACGP,U,qBCNN,SAASW,EAASzB,GAC7B,IAAM0B,EAAQC,mBAERC,GADKC,MACSrE,EAAUsE,WAAW,aACnCC,EAAQH,EAAYI,QAAQ,aAAaC,MAAM,IAGrD,EAAmBC,YAAkBH,EAAO,CAAEI,QAAS,KAAMpB,QAAQ,MAA9DqB,EAAP,oBAQA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGMC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQpF,EAAK6D,YAAvBJ,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZW,EAAYgB,IAAI,CACpB7B,QAAS,IACTD,KAAMwB,EACNnB,UAAWvE,IAASY,UAAUqF,WAAWC,kBACzC9B,MACAC,aAVgB,OAalBsB,EAAa,IACbb,EAAMqB,QAAQC,eAAe,CAAEC,SAAU,WAdvB,2CAAH,sDAiBjB,OAAQ,qCACN,iCAGEb,GAEAA,EAASc,KAAI,SAAAC,GAAQ,OAAOA,EAAIpC,UAAUf,EAAMe,QAC9C,cAACH,EAAD,CAA0BC,QAASsC,GAAjBA,EAAIC,IAAqB,MAS7C,sBAAMC,IAAK3B,OAGf,qBAAKhE,MAAO,CACRa,gBAAgB,OAChBM,SAAU,QACVyE,YAAa,MACbvE,KAAM,MACNC,MAAM,yBACNuE,OAAQ,KACRlE,UAAW,oBAPf,SAUI,sBAAM3B,MAAO,CAACkC,QAAS,QAAS4D,SAAUhB,EAA1C,SACA,sBAAK9E,MAAO,CAACkC,QAAQ,YAAahC,MAAM,4BAAxC,UACI,uBAAOwF,GAAG,QAAQxF,MAAM,2BAA2B6F,KAAK,IAAIC,MAAOpB,EAAWqB,SAAU,SAAClB,GAAD,OAAOF,EAAaE,EAAEmB,OAAOF,QAAQG,YAAY,WACzI,wBAAQjG,MAAM,yBAAyBkG,KAAK,SAASC,UAAWzB,EAAhE,oC,oCC3ER0B,EAAU,CACZC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,GAEd,SAASC,EAAQC,GACf,IAAIC,EAAMD,EAAIE,OAEdC,QAAQC,IAAI,6BACZD,QAAQC,IAAR,qBAA0BH,EAAII,WAC9BF,QAAQC,IAAR,qBAA0BH,EAAIK,YAC9BH,QAAQC,IAAR,uBAA4BH,EAAIM,SAAhC,aAGF,SAASC,EAAOC,GACdN,QAAQO,KAAR,gBAAsBD,EAAIE,KAA1B,cAAoCF,EAAIjE,UAGDoE,Y,OCnBRC,IAAMD,U,gFCCGC,IAAMD,U,4DC4B1CE,G,cAAc,KAkCpB,IAAM3F,EAAYG,aAAW,SAACtB,GAAD,MAAY,CACvCoB,KAAM,CACJG,QAAS,QAEXwF,OAAQ,CACNC,OAAQhH,EAAMgH,OAAOC,OAAS,EAC9BC,WAAYlH,EAAMmH,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQrH,EAAMmH,YAAYE,OAAOC,MACjCC,SAAUvH,EAAMmH,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAAYZ,EACZnG,MAAM,eAAD,OAAiBmG,EAAjB,OACLI,WAAYlH,EAAMmH,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQrH,EAAMmH,YAAYE,OAAOC,MACjCC,SAAUvH,EAAMmH,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,KAAM,CACJvG,QAAS,QAEX0F,OAAQ,CACNtG,MAAOmG,EACPiB,WAAY,EACZC,WAAY,UAEdC,WAAY,CACVtH,MAAOmG,EACPI,WAAYlH,EAAMmH,YAAYC,OAAO,QAAS,CAC5CC,OAAQrH,EAAMmH,YAAYE,OAAOC,MACjCC,SAAUvH,EAAMmH,YAAYI,SAASI,kBAGzCO,YAAY,aACVhB,WAAYlH,EAAMmH,YAAYC,OAAO,QAAS,CAC5CC,OAAQrH,EAAMmH,YAAYE,OAAOC,MACjCC,SAAUvH,EAAMmH,YAAYI,SAASC,gBAEvCW,UAAW,SACXxH,MAAOX,EAAMyB,QAAQ,GAAK,GACzBzB,EAAMoI,YAAYC,GAAG,MAAQ,CAC5B1H,MAAOX,EAAMyB,QAAQ,GAAK,IAG9B6G,QAAQ,aACN/G,QAAS,OACTgH,WAAY,SACZC,eAAgB,WAChBC,QAASzI,EAAMyB,QAAQ,EAAG,IAEvBzB,EAAM0I,OAAOJ,SAElBvH,QAAS,CACP4H,SAAU,EACVF,QAASzI,EAAMyB,QAAQ,QAIZ,SAASmH,IACtB,IAAMhH,EAAUT,IAEhB,GADc0H,cACYhC,IAAM7C,SAAS,IAAzC,mBAAOqB,EAAP,KACA,GADA,KACyBwB,IAAM7C,SAAS,IAAxC,mBAAO8E,EAAP,KAAcC,EAAd,KAOA,EAAwBlC,IAAM7C,UAAS,GAAvC,mBAAOgF,EAAP,KAAaC,EAAb,KAUAC,qBAAU,WACR3K,IAAS4K,WAAWnE,IAAI,SAAW9F,EAAK6D,YAAYJ,KAAKyG,IAAI,CAC3DC,SAAUnK,EAAK6D,YAAYI,YAC3BmG,MAAOpK,EAAK6D,YAAYH,SACxB2G,MAAQ,YACRC,MAAO,CAAC,OAEIjL,IAAS4K,WAAWnE,MAC5ByE,MAAM,SAASC,MAAMC,MAAK,SAACC,GAC3BA,EAASC,UACX1D,QAAQC,IAAIwD,EAASE,OACrBf,EAAQa,EAASE,OACjBhB,EAAMiB,KAAKH,EAASE,QAEpB3D,QAAQC,IAAI,wBAEb4D,OAAM,SAACC,GACR9D,QAAQ8D,MAAMA,QAKhB,IAeF,OACE,sBAAKpI,UAAWD,EAAQR,KAAxB,UACE,cAAC8I,EAAA,EAAD,IACA,iCACA,cAACC,EAAA,EAAD,CACE3J,SAAS,QACTqB,UAAWuI,YAAKxI,EAAQmF,OAAT,eACZnF,EAAQ6F,YAAcuB,IAH3B,SAME,eAACqB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEnK,MAAM,UACNoK,aAAW,cACX9K,QA3Be,WACvBwJ,GAAQ,IA2BAuB,KAAK,QACL3I,UAAWuI,YAAKxI,EAAQgG,WAAT,eACZhG,EAAQkG,KAAOkB,IANpB,SASE,cAAC,IAAD,MAGF,cAACyB,EAAA,EAAD,CAAYvI,QAAQ,KAAKwI,QAAM,EAA/B,8BAGA,cAACJ,EAAA,EAAD,CACEnK,MAAM,UACNoK,aAAW,cACX9K,QAvCW,WACnBlB,IAAS4K,WAAWnE,IAAI,SAAS9F,EAAK6D,YAAYJ,KAAKgI,OAAO,CAC5DpB,MAAM,iBACLI,KAAKzK,EAAK0L,YAiCP,SAME,cAAC,IAAD,WA0CN,sBAAM/I,UAAWD,EAAQb,QAAzB,SACA,cAACqC,EAAD,CAAUV,QAAQ,IAAIoG,MAAOA,EAAO/D,GAAIM,SC/N/BwF,OAnBf,WACE,MAAeC,YAAa5L,GAArB6L,EAAP,oBACA,OACE,mCACCA,EACC,cAAC,IAAD,UACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtC,QAMnC,cAACxJ,EAAD,OClBS+L,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.48a6d5d8.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n const config = {\n    apiKey: \"AIzaSyBvjMWV1okvLur6IA26-9I_wTw34FBWImk\",\n    authDomain: \"portfolio-1e555.firebaseapp.com\",\n    projectId: \"portfolio-1e555\",\n    storageBucket: \"portfolio-1e555.appspot.com\",\n    messagingSenderId: \"935937401689\",\n    appId: \"1:935937401689:web:a56edd862b344f7b45e248\",\n    measurementId: \"G-KYCPNE30EY\"\n  };\n  if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n  }\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","import React from 'react';\nimport firebase from 'firebase/app';\nimport {auth, firestore} from '../services/firebase';\n\nimport {Link} from 'react-router-dom'\n\nexport default function SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n      <div style={{height:'600px'}} class=\"container\">\n        <div class=\"row justify-content-md-center\">\n          <div class=\"col-md-auto\">\n            <a style={{marginTop:'100px'}} class=\"btn btn-primary\" onClick={signInWithGoogle} role=\"button\"><i class=\"fab fa-google\"></i> Sign in with Google</a>\n          </div>\n        </div>\n    </div>\n  )\n\n}","import React from 'react';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nconst SmallAvatar = withStyles((theme) => ({\n  root: {\n    width: 22,\n    height: 22,\n    border: `2px solid ${theme.palette.background.paper}`,\n  },\n}))(Avatar);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function BadgeAvatars(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <StyledBadge\n        overlap=\"circle\"\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        variant=\"dot\"\n      >\n        <Avatar alt={props.title} src={props.img} />\n      </StyledBadge>\n    </div>\n  );\n}","import React from 'react';\nimport {auth} from '../services/firebase';\nimport BadgeAvatars from './Avatar';\n\nexport default function ChatMessage(props) {\n    const { chat_id, text, uid, photoURL, createdAt } = props.message;\n  \n    const contentJustification = uid === auth.currentUser.uid ? 'justify-content-end' : 'justify-content-start';\n    const messageColor = uid === auth.currentUser.uid ? 'primary-color' : 'secondary-color';\n    const messageSize = uid === auth.currentUser.uid ? '' : 'max-content';\n    const imageOrNot = uid === auth.currentUser.uid ? '' : <BadgeAvatars title={auth.currentUser.displayName} img={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n    return (<>\n        <div className=\"text-center\"><small></small></div>\n                <div style={{width:messageSize}} class={`d-flex ${contentJustification}`} >\n                  {imageOrNot}\n                  <p class={`rounded p-3 text-white w-75  ${messageColor}`}>\n                    {text}</p>\n        </div>\n    </>)\n  }\n  ","import React, {useEffect, useRef, useState} from 'react';\nimport firebase from 'firebase/app';\nimport {firestore} from './services/firebase';\nimport 'firebase/auth';\nimport ChatMessage from './components/ChatMessage'\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\nimport {auth} from './services/firebase';\nimport nextId from \"react-id-generator\";\n\nexport default function ChatRoom(props) {\n    const dummy = useRef();\n    const id = nextId();\n    const messagesRef = firestore.collection('messages');\n    const query = messagesRef.orderBy('createdAt').limit(25);\n    \n  \n    const [messages] = useCollectionData(query, { idField: 'id', chat_id:'1' });\n    const parsed = [];\n    // messages.filter(msg => msg.chat_id!==null).map(msg=>(\n    //   console.log(msg)\n    // ))\n\n    //console.log(messages)\n  \n    const [formValue, setFormValue] = useState('');\n  \n  \n    const sendMessage = async (e) => {\n      e.preventDefault();\n  \n      const { uid, photoURL } = auth.currentUser;\n  \n      await messagesRef.add({\n        chat_id: '1',\n        text: formValue,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        photoURL\n      })\n  \n      setFormValue('');\n      dummy.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  \n    return (<>\n      <main>\n\n        {\n        messages \n        && \n        messages.map(msg => {return msg.chat_id===props.chat_id ? \n          <ChatMessage key={msg.id} message={msg} />:\"\"\n        })\n        // messages.filter(msg => msg.includes(props.chat_id)).map(filteredMessage => (\n          \n        //     <ChatMessage key={filteredMessage.id} message={filteredMessage}/>\n          \n        // ))\n        }\n  \n        <span ref={dummy}></span>\n  \n      </main>\n    <div style={{\n        backgroundColor:'#ddd',\n        position: 'fixed',\n        paddingLeft: '2em',\n        left: '50%',\n        width:'-webkit-fill-available',\n        bottom: '0%',\n        transform: 'translateX(-50%)',\n\n        }}>\n        <form style={{display: 'flex'}} onSubmit={sendMessage}>\n        <div style={{display:'contents'}} class=\"md-form chat-message-type\">\n            <input id=\"form7\" class=\"md-textarea form-control\" rows=\"3\" value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Say Hi\" />\n            <button class=\"btn btn-primary btn-lg\" type=\"submit\" disabled={!formValue}>Send message</button>\n        </div>\n     \n  \n        {/* <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n  \n        <button type=\"submit\" disabled={!formValue}>🕊️</button> */}\n  \n      </form>\n      </div>\n    </>)\n  }","import React, { Component } from \"react\";\n\nvar options = {\n  enableHighAccuracy: true,\n  timeout: 1000,\n  maximumAge: 0,\n};\nfunction success(pos) {\n  var crd = pos.coords;\n\n  console.log(\"Your current position is:\");\n  console.log(`Latitude : ${crd.latitude}`);\n  console.log(`Longitude: ${crd.longitude}`);\n  console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errors(err) {\n  console.warn(`ERROR(${err.code}): ${err.message}`);\n}\n\nexport default class GeoLocation extends Component {\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.permissions\n        .query({ name: \"geolocation\" })\n        .then(function (result) {\n          if (result.state === \"granted\") {\n            console.log(result.state);\n            //If granted then you can directly call your function here\n            navigator.geolocation.getCurrentPosition(success);\n          } else if (result.state === \"prompt\") {\n            navigator.geolocation.getCurrentPosition(success, errors, options);\n          } else if (result.state === \"denied\") {\n            //If denied then you have to show instructions to enable location\n          }\n          result.onchange = function () {\n            console.log(result.state);\n          };\n        });\n    } else {\n      alert(\"Sorry Not available!\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>GeoLocation</h2>\n      </div>\n    );\n  }\n}","import React from 'react';\nexport default class GPS extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        lat: null,\n        lng: null,\n      }\n    }\n    componentWillMount() {\n  \n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({ lat: position.coords.latitude, lng: position.coords.longitude });\n      }, err => console.log(err)\n      );\n    }\n  \n    render() {\n  \n      return (\n        <div >\n          <h1>Current Position:</h1>\n          <p>Latitude: {this.state.lat}</p>\n          <p>Longitude: {this.state.lng}</p>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport {auth, firestore} from '../services/firebase'\nexport default class synchronized extends React.Component {\n    componentDidMount(){\n        console.log(\"adding data\")\n        firestore.collection('users').doc(auth.currentUser.uid).set({\n            username: auth.currentUser.displayName,\n            uid: auth.currentUser.uid,\n            image: auth.currentUser.photoURL,\n            state:'connected',\n        })\n    }\n    render(){\n        return(\n            <div></div>\n        )\n    }\n}","import React, {useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {auth} from '../services/firebase'\nimport synchronized from '../components/synchronized';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Button from '@material-ui/core/Button';\nimport ChatRoom from '../ChatRoom';\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nconst drawerWidth = 240;\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  const [users, setUser] = React.useState(0);\n  \n  var x = 0;\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  //var database = firebase.database();\n  const [open, setOpen] = React.useState(false);\n  const handleCreateChatRoom = (e) =>{\n    firebase.database().ref('users/' + auth.currentUser.uid+'/chats').push(\"2\")\n    // .set({\n    //   username: auth.currentUser.displayName,\n    //   photo: auth.currentUser.photoURL,\n    //   state : \"connected\",\n    //   chats: [\"1\"],\n    // });\n  }\n  useEffect(() => {\n    firebase.database().ref('users/' + auth.currentUser.uid).set({\n      username: auth.currentUser.displayName,\n      photo: auth.currentUser.photoURL,\n      state : \"connected\",\n      chats: [\"1\"],\n    });\n    const dbRef = firebase.database().ref();\n    dbRef.child(\"users\").get().then((snapshot) => {\n      if (snapshot.exists()) {\n        console.log(snapshot.val());\n        setUser(snapshot.val())\n        users.push(snapshot.val());\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n\n\n\n }, [])\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleLogout = () =>{\n    firebase.database().ref('users/'+auth.currentUser.uid).update({\n      state:\"disconnected\"\n    }).then(auth.signOut())\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <synchronized/>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n        \n          <Typography variant=\"h6\" noWrap>\n            Chat Application\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleLogout}\n            \n          >\n            <ExitToAppIcon />\n          </IconButton>\n          \n        </Toolbar>\n      </AppBar>\n      {/* <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"Vertical tabs example\"\n          className={classes.tabs}>\n           \n          <Tab label=\"Item One\" {...a11yProps(0)} />\n          <Tab label=\"Item Two\" {...a11yProps(1)} />\n          <Tab label=\"Item Three\" {...a11yProps(2)} />\n          <Tab label=\"Item Four\" {...a11yProps(3)} />\n          <Tab label=\"Item Five\" {...a11yProps(4)} />\n          <Tab label=\"Item Six\" {...a11yProps(5)} />\n          <Tab label=\"Item Seven\" {...a11yProps(6)} />\n      </Tabs>\n        <Divider />\n      </Drawer> */}\n      <main className={classes.content}>\n      <ChatRoom chat_id=\"1\" users={users} id={value}/>\n          {/* <TabPanel value={value} index={0}>\n            <ChatRoom chat_id=\"1\" users={users} id={value}/>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n        <ChatRoom chat_id=\"1\" users={users} id={value}/>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n\n            </div>\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          Item Four\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          Item Five\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n          Item Six\n        </TabPanel>\n        <TabPanel value={value} index={6}>\n          Item Seven\n        </TabPanel> */}\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport './App.css';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport Home from './pages/Home'\n// import Profile from './pages/Profile'\n import SignIn from './components/SignIn'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport {auth} from './services/firebase';\nimport Dashboard from './pages/Dashboard';\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  return (\n    <>\n    {user ?(\n      <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        {/* <Route exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/sign-in\" component={SignIn} /> */}\n      </Switch>\n    </Router>\n    ):(\n      <SignIn/>\n    )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}